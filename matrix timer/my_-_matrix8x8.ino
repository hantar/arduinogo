#include <Wire.h>
#include "Adafruit_LEDBackpack.h"
#include "Adafruit_GFX.h"

const int buttonPin = 2;     // the number of the pushbutton pin
const int GrnLed =  12;// the number of the green LED pin

int buttonState = 0;         // variable for reading the pushbutton status
int buzzer = 13;       //buzzer pin is 11

Adafruit_8x8matrix matrix = Adafruit_8x8matrix();


const byte go[] PROGMEM = {
  B00000000,
  B00000000,
  B01100110,
  B10011001,
  B10001001,
  B10111001,
  B10011001,
  B01100110}; 


const byte dots[][65] PROGMEM = {  
  {
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B10000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11100000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11110000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111100,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111110,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B10000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11100000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11110000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111100,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111110,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B10000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11100000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11110000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111100,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111110,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B10000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11100000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11110000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111100,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111110,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B00000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B10000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11000000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11100000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11110000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111000,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111100,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111110,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B00000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B10000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11000000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11100000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11110000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111000,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111100,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111110,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B00000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B10000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11000000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11100000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11110000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111000,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111100,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111110,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B00000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B10000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11000000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11100000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11110000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111000},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111100},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111110},
  {
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111
}
};




void setup() {
  Serial.begin(9600);
  Serial.println("8x8 LED Matrix Test");
  matrix.begin(0x70);  // pass in the address
  
  
   // initialize the LED pin as an output:
  pinMode(GrnLed, OUTPUT);
   // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);

}

void loop() {
  matrix.clear();
   // read the state of the pushbutton value:
  buttonState = digitalRead(buttonPin);



  // check if the pushbutton is pressed.
  // if it is, the buttonState is HIGH:
  if (buttonState == HIGH) {
    CountDown();
    RunTimer();
    GameOver();
  }
}




void CountDown(){
  matrix.setBrightness(0);
  for(int8_t x = 3; x != 0; x--){
  matrix.setRotation(0);
  matrix.clear();
  matrix.setCursor(1,1);
  matrix.print(x);
  matrix.writeDisplay();
  tone(buzzer,329,1000);
  delay(1000);
  
  for (int8_t y=0; y>=-10; y--) {
    matrix.clear();
    matrix.setCursor(1,y);
    matrix.print(x);
    matrix.writeDisplay();
    delay(45);
  }
  }
  
  matrix.clear();
  matrix.drawBitmap(0, 0, go, 8, 8, LED_ON);
  matrix.writeDisplay();
  tone(buzzer,987,1100);
  delay(1000);

  // turn LED on:
    digitalWrite(GrnLed, HIGH);
}

void RunTimer(){

  for(int counter = 64; counter >= 0; counter--){
  matrix.clear();
  matrix.drawBitmap(0, 0, dots[counter], 8, 8, LED_ON);
  matrix.writeDisplay();

  if(counter <= 9 && counter > 0){
    matrix.setBrightness(8);
    tone(buzzer, 987, 250);
  }

  if(counter == 0){
    tone(buzzer, 200, 300);
  }

  delay(400);


  }
  

  matrix.setRotation(0);
}

void GameOver(){

  // turn LED off:
  digitalWrite(GrnLed, LOW);
  //display "Game over"
  matrix.setBrightness(0); //set brightness back to darkest
  matrix.setTextSize(1);
  matrix.setTextWrap(false);  // we dont want text to wrap so it scrolls nicely
  matrix.setTextColor(LED_ON);
  
  for (int8_t x=0; x>=-54; x--) {
    matrix.clear();
    matrix.setCursor(x,0);
    matrix.print("Game Over");
    matrix.writeDisplay();
    delay(100);
    matrix.clear();
  }
}



