#include <Wire.h>
#include "Adafruit_LEDBackpack.h"
#include "Adafruit_GFX.h"

const int buttonPin = 2;     // the number of the pushbutton pin
const int GrnLed =  12;// the number of the green LED pin
const int RedLed =  13;// the number of the red LED pin
int buttonState = 0;         // variable for reading the pushbutton status
Adafruit_8x8matrix matrix = Adafruit_8x8matrix();

void setup() {
  Serial.begin(9600);
  Serial.println("8x8 LED Matrix Test");
  matrix.begin(0x70);  // pass in the address
  
  
   // initialize the LED pin as an output:
  pinMode(GrnLed, OUTPUT);
  pinMode(RedLed, OUTPUT);
  // initialize the pushbutton pin as an input:
  pinMode(buttonPin, INPUT);

}

const byte go[] PROGMEM = {
  B00000000,
  B00000000,
  B01100110,
  B10011001,
  B10001001,
  B10111001,
  B10011001,
  B01100110}; 


const byte dots[][65] PROGMEM = {  
  {
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B10000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11100000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11110000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111100,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111110,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B10000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11100000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11110000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111100,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111110,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B10000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11100000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11110000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111100,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111110,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B00000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B10000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11000000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11100000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11110000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111000,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111100,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111110,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B00000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B10000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11000000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11100000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11110000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111000,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111100,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111110,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B00000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B10000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11000000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11100000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11110000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111000,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111100,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111110,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B00000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B10000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11000000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11100000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11110000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111000,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111100,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111110,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B00000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B10000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11000000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11100000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11110000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111000
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111100
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111110
},{
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111,
  B11111111
}
};


void loop() {
  matrix.clear();
   // read the state of the pushbutton value:
  buttonState = digitalRead(buttonPin);

  // check if the pushbutton is pressed.
  // if it is, the buttonState is HIGH:
  if (buttonState == HIGH) {
    // turn LED on:
    digitalWrite(GrnLed, HIGH);
   runtimer();
  }
  else {
    // turn LED off:
    digitalWrite(GrnLed, LOW);
  } 
}

void runtimer(){
  matrix.setBrightness(0);
  for(int8_t x = 3; x != 0; x--){
  matrix.setRotation(0);
  matrix.clear();
  matrix.setCursor(1,1);
  matrix.print(x);
  matrix.writeDisplay();
  delay(1000);

  for (int8_t y=0; y>=-10; y--) {
    matrix.clear();
    matrix.setCursor(1,y);
    matrix.print(x);
    matrix.writeDisplay();
    delay(45);
  }
  }
  
  matrix.clear();
  matrix.drawBitmap(0, 0, go, 8, 8, LED_ON);
  matrix.writeDisplay();
  delay(1000);

  for(int x = 64; x >= 0; x--){
  matrix.clear();
  matrix.drawBitmap(0, 0, dots[x], 8, 8, LED_ON);
  matrix.writeDisplay();
  delay(1000);
  }


  //display "Game over"
  matrix.setTextSize(1);
  matrix.setTextWrap(false);  // we dont want text to wrap so it scrolls nicely
  matrix.setTextColor(LED_ON);
  for (int8_t x=0; x>=-54; x--) {
    matrix.clear();
    matrix.setCursor(x,0);
    matrix.print("Game Over");
    matrix.writeDisplay();
    delay(100);
    matrix.clear();
  }

  matrix.setRotation(0);
  
}
